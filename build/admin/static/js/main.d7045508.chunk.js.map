{"version":3,"sources":["Util.js","Login.js","Logout.js","TopMenu.js","Loader.js","Actions.js","Add.js","ResourceList.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["getcsrftoken","document","cookie","split","find","row","startsWith","Login","props","useState","username","password","dataObj","setDataObj","hasError","setHasError","error","className","handleChange","e","target","name","value","loggedIn","to","style","height","method","action","type","onChange","placeholder","onClick","preventDefault","fetch","body","JSON","stringify","headers","then","response","status","text","Promise","resolve","result","notifyLoginState","catch","err","console","log","Logout","logout","Add","notify","addViewState","icon","faPlusCircle","color","size","TopMenu","Loader","position","backgroundColor","width","zIndex","display","alignItems","justifyContent","flexDirection","faCircleNotch","Actions","AddInProgress","AddCompleted","FetchingData","DataFetchedSuccessfully","EditInProgress","DeleteInProgress","EditCompleted","DeleteCompleted","title","link","topics","inProgress","setInProgress","isValid","setIsValid","validStates","setValidStates","notification","setNotification","errorMsgs","validators","Topics","topic","setTopic","isEmpty","setIsEmpty","addTopic","TopicList","map","item","index","key","faTimesCircle","deleteTopic","active","push","delIndex","forEach","valid","element","validator","setTimeout","disabled","href","data-dismiss","aria-label","ResourceList","handleEvents","Resource","mode","setMode","data","setData","oldData","setOldData","handleEdit","ResourceView","id","faEdit","EditResourceView","useEffect","faTrashAlt","cursor","actionInProgress","listStyleType","resources","resource","Home","setResources","setAddViewState","setActionInProgress","receiveNotifications","getResources","json","localStorage","removeItem","state","App","parse","getItem","session","setSession","receiveLoginEvents","expireTime","setItem","currentTime","Date","getTime","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d7045508.chunk.js","sourcesContent":["function getcsrftoken() {\r\n    let cookiedata = document.cookie.split('; ').find(row => row.startsWith('XSRF-TOKEN'));\r\n    return cookiedata.split('=')[1];\r\n}\r\n\r\nexport { getcsrftoken };","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getcsrftoken } from './Util';\r\n\r\nfunction Login(props) {\r\n    // eslint-disable-next-line\r\n    let [dataObj, setDataObj] = useState({username: \"\", password: \"\"});\r\n\r\n    let element;\r\n\r\n    let [hasError, setHasError] = useState(false);\r\n\r\n    let error = hasError === true ? <div className=\"alert alert-danger\">Invalid Credentials</div> : '';\r\n\r\n    if(props.loggedIn === true) {\r\n        element = <Redirect to='/admin' />;\r\n    }\r\n    else {\r\n        element = \r\n            <div style={ { height: '100%' } } className=\"container-fluid d-flex align-items-center justify-content-center\">\r\n            <div className=\"row\">\r\n            <form method=\"GET\" action=\"/api/auth/login\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" name=\"username\" value={ dataObj.username } onChange={ handleChange } placeholder=\"Enter username\" className=\"form-control\" />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                <div className=\"form-group\">\r\n                <input type=\"password\" name=\"password\" value= { dataObj.password } onChange={ handleChange } placeholder=\"Enter password\" className=\"form-control\" />\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex justify-content-center\">\r\n            <div className=\"form-group\">\r\n            <button type=\"submit\" onClick = { handleSubmit } className=\"btn btn-primary\">Login</button>\r\n            </div>\r\n            </div>\r\n            { error }\r\n            </form>\r\n            </div>\r\n            \r\n            </div>;\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setDataObj({...dataObj,\r\n            [e.target.name] : e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch('/api/auth/login', { \r\n            method: 'POST',\r\n            body: JSON.stringify(dataObj),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'XSRF-TOKEN': getcsrftoken()\r\n            }\r\n        }).then((response) => {\r\n            if(response.status === 200) {\r\n                return response.text();\r\n            }\r\n            else {\r\n                return new Promise((resolve) => {\r\n                    resolve(false);\r\n                });\r\n            }\r\n        }).then((result) => {\r\n            if(result === false) {\r\n                setHasError(true);\r\n            }\r\n            else {\r\n                props.notifyLoginState(true, result);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction Logout(props) {\r\n\r\n    function logout() {\r\n        fetch('/api/auth/logout')\r\n        .then((response) => {\r\n            if(response.status) {\r\n                props.logout();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='col-md-11'>\r\n            <div className='float-right'>\r\n            <button className=\"btn btn-primary default\" onClick= { logout }>Logout</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Logout from './Logout';\r\n\r\nlet Add = (props) => { \r\n    function handleClick() {\r\n        props.notify(!props.addViewState);\r\n    }\r\n\r\n    return (\r\n        <div className='col-md-1'>\r\n        <FontAwesomeIcon onClick={ handleClick } icon={faPlusCircle} style = { { color: 'MediumSeaGreen' } } className=\"default pointer\" size=\"2x\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction TopMenu(props) {\r\n\r\n    return (\r\n        <div className='row d-flex align-items-center pt-1'>\r\n            <Add notify = { props.notify } addViewState = { props.addViewState } />\r\n            <Logout logout = { props.logout } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopMenu;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Loader() {\r\n    let loaderStyle = { position: 'absolute', \r\n                        backgroundColor: 'rgb(255, 255, 255, 0.5)', \r\n                        width: '100%', \r\n                        height: '100%', \r\n                        zIndex: 1,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        flexDirection: 'column'\r\n                     };\r\n    return (\r\n        <div style={ loaderStyle }>\r\n            <FontAwesomeIcon icon={ faCircleNotch } style={ { color: 'DodgerBlue' } } className=\"default fa-spin\" size=\"2x\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","const Actions = {\r\n    AddInProgress: 1,\r\n    AddCompleted: 2,\r\n    FetchingData: 3,\r\n    DataFetchedSuccessfully: 4,\r\n    EditInProgress: 5,\r\n    DeleteInProgress: 6,\r\n    EditCompleted: 7,\r\n    DeleteCompleted: 8\r\n};\r\n\r\nexport default Actions;","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle, faPlusCircle, faCircleNotch } from '@fortawesome/free-solid-svg-icons';\r\nimport { getcsrftoken } from './Util';\r\nimport Loader from './Loader';\r\nimport Actions from './Actions';\r\n\r\nfunction Add(props) {\r\n    // eslint-disable-next-line\r\n    let [dataObj, setDataObj] = useState({ title: \"\", link: \"\", topics: [],  });\r\n    let [inProgress, setInProgress] = useState(false);\r\n    let [isValid, setIsValid] = useState(true);\r\n    let [validStates, setValidStates] = useState({title: true});\r\n    let [notification, setNotification] = useState(false);\r\n\r\n    let errorMsgs = {title: 'Title is Required'};\r\n\r\n    let validators = { title: function(title) {\r\n            if(title === \"\") {\r\n                errorMsgs['title'] = 'Title is required';\r\n                return false;\r\n            }\r\n            errorMsgs['title'] = '';\r\n            return true;\r\n        }\r\n    };\r\n\r\n    function validator() {\r\n        let valid = true;\r\n        let validStates = {};\r\n        for(let element in validators) {\r\n            let result = validators[element](dataObj[element]);\r\n            validStates[element] = result;\r\n            if(result === false) {\r\n                valid = false;\r\n            }\r\n        }\r\n        setValidStates(validStates);\r\n        setIsValid(valid);\r\n        return valid;\r\n    }\r\n\r\n    let Topics = (props) => {\r\n        let Add = (props) => {\r\n            let [topic, setTopic] = useState(\"\");\r\n            let [isEmpty, setIsEmpty] = useState(false);\r\n\r\n            let handleChange = (e) => {\r\n                setTopic(e.target.value);\r\n            };\r\n\r\n            let addTopic = () => {\r\n                if(topic !== \"\") {\r\n                    setIsEmpty(false);\r\n                    props.addTopic(topic);\r\n                }\r\n                else {\r\n                    setIsEmpty(true);\r\n                }\r\n            };\r\n\r\n            return (\r\n                <div className=\"row pl-1 pr-1\">\r\n                <div className=\"col-md\">\r\n                <label>Topics:</label>\r\n                <div className=\"form-group form-inline\">\r\n                <input type=\"text\" name=\"topics\" value={ topic } onChange={ handleChange } placeholder=\"Enter topics\" className=\"form-control\"/>\r\n                <FontAwesomeIcon onClick = { addTopic } icon={faPlusCircle} style = { { color: 'DodgerBlue' } } size='2x' className=\"default pointer\"/>\r\n                { isEmpty ? \r\n                <div className=\"alert alert-danger\">Empty Topic</div> : ''\r\n                }\r\n                </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        };\r\n\r\n        let TopicList = (props) => {\r\n\r\n            return (\r\n                <div className = 'topic-container'>\r\n                { props.topics.map((item, index) => \r\n                    <div className='topic' key={index}>\r\n                        <span className=\"default\">{item}</span>\r\n                        <FontAwesomeIcon icon={ faTimesCircle } onClick={ () => { props.deleteTopic(index) } } className=\"default\"/>\r\n                    </div>\r\n                ) }\r\n                </div>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div style = { { width: '100%' }}>\r\n                <Add addTopic = { props.addTopic } />\r\n                <TopicList topics = { props.topics } deleteTopic = { props.deleteTopic } />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    function handleChange(e) {\r\n        setDataObj({...dataObj, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    function addTopic(topic) {\r\n        let topics = [...dataObj.topics];\r\n        topics.push(topic);\r\n        setDataObj({ ...dataObj, topics: topics });\r\n    }\r\n\r\n    function deleteTopic(delIndex) {\r\n        let topics = [];\r\n        dataObj.topics.forEach((topic, index) => {\r\n            if(index !== delIndex) {\r\n                topics.push(topic);\r\n            }\r\n        });\r\n        setDataObj({ ...dataObj, topics: topics });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(validator()) {\r\n            setInProgress(true);\r\n            fetch('/api/resource', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'XSRF-TOKEN': getcsrftoken()\r\n                },\r\n                body: JSON.stringify(dataObj)\r\n            }).then((response) => { \r\n                if(response.status === 200) {\r\n                    setNotification(true);\r\n                    setInProgress(false);\r\n                    setTimeout(() => {\r\n                        setNotification(false);\r\n                    }, 5000);\r\n                    props.notify(Actions.AddCompleted);\r\n                } \r\n            });\r\n        }\r\n    }\r\n\r\n    let element = props.active === true ? (\r\n        <div className=\"add\">\r\n        { inProgress ? <Loader /> : '' }\r\n        <form method=\"POST\" action=\"/resource\">\r\n        <div className=\"row\">\r\n\r\n        <div className=\"col-md-6\">\r\n        <div className=\"form-group\">\r\n        <label>Title:</label>\r\n        <input type=\"text\" name=\"title\" value={ dataObj.title } onChange={ handleChange } placeholder=\"Enter title\" className=\"form-control\"/>\r\n        { !isValid && !validStates.title ? <div className=\"alert alert-danger default\">{errorMsgs.title}</div> : '' }\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n        <div className=\"form-group\">\r\n        <label>Link:</label>\r\n        <input type=\"text\" name=\"link\" value={ dataObj.link } onChange={ handleChange } placeholder=\"Enter link\" className=\"form-control\"/>\r\n        </div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        <Topics topics = { dataObj.topics } addTopic = { addTopic } deleteTopic = { deleteTopic } />\r\n        \r\n        <div className=\"row pl-1 pr-1\">\r\n        <div className=\"col-md-2\">\r\n            <div className=\"form-group\">\r\n            <button type=\"submit\" onClick={ handleSubmit } className=\"btn btn-success\" disabled = { inProgress }>Save</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        { notification ? \r\n            <div className=\"row\">\r\n            <div className=\"alert alert-success alert-dismissible ml-3\">\r\n                <a href=\"#\" className=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>Resource Added Successfully\r\n            </div>\r\n            </div> : '' \r\n        }\r\n        \r\n        </form>\r\n        </div>\r\n        ) : '';\r\n    \r\n    return element;\r\n}\r\n\r\nexport default Add;","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faPlusCircle, faTimesCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Loader from './Loader';\r\nimport Actions from './Actions';\r\nimport { getcsrftoken } from './Util';\r\n\r\nfunction ResourceList(props) {\r\n    let [inProgress, setInProgress] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(props.actionInProgress === Actions.FetchingData) {\r\n            setInProgress(true);\r\n        }\r\n        else {\r\n            setInProgress(false);\r\n        }\r\n    }, [props.actionInProgress]);\r\n\r\n    function handleEvents(action) {\r\n        switch(action) {\r\n            case Actions.EditInProgress:\r\n            case Actions.DeleteInProgress: \r\n                setInProgress(true);\r\n                break;\r\n            case Actions.EditCompleted:\r\n            case Actions.DeleteCompleted:\r\n                props.notify(action);\r\n                break;\r\n            default:\r\n                setInProgress(false);\r\n        }\r\n    }\r\n\r\n    function Resource(props) {\r\n        let [mode, setMode] = useState('view');\r\n        let [data, setData] = useState({});\r\n        let [oldData, setOldData] = useState({});\r\n        \r\n        useEffect(() => {\r\n            setData(props.data);\r\n        }, [props.data]);\r\n\r\n        function handleEdit(mode) {\r\n            if(mode === 'edit') {\r\n                setOldData(data);\r\n                setMode('edit');\r\n            }\r\n            else if(mode === 'view') {\r\n                setData(oldData);\r\n                setMode('view');\r\n            }\r\n        }\r\n\r\n        function handleChange(e) {\r\n            setData({...data, [e.target.name]: e.target.value});\r\n        }\r\n\r\n        function ResourceView(props) {\r\n            return (\r\n                <li className=\"resource-container\" key={props.data.id}>\r\n                <FontAwesomeIcon onClick={ () => { props.handleEdit(\"edit\") } } icon={ faEdit } className=\"default resource-edit\" />\r\n                <div className=\"row\">\r\n                <div className=\"col-md-1\">\r\n                <strong>Title:</strong>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                <p>\r\n                {props.data.title}\r\n                </p>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-md-1\">\r\n                <strong>Link:</strong>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                <p>\r\n                {props.data.link}\r\n                </p>\r\n                </div>\r\n                </div>\r\n                \r\n                <div className=\"row\">\r\n                <div className=\"col-md-1\">\r\n                <strong>Topics: </strong>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                <div className = \"topic-container\">\r\n                { props.data.topics ? props.data.topics.map((item, index) => \r\n                    <div className=\"topic\" key={index}>\r\n                        <span className=\"default\">{item}</span>\r\n                    </div>\r\n                ) : '' }\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n                </li> \r\n            );\r\n        }\r\n        \r\n        function EditResourceView(props) {\r\n\r\n            let Topics = (props) => {\r\n                let Add = (props) => {\r\n                    let [topic, setTopic] = useState(\"\");\r\n                    let [isEmpty, setIsEmpty] = useState(false);\r\n        \r\n                    let handleChange = (e) => {\r\n                        setTopic(e.target.value);\r\n                    };\r\n        \r\n                    let addTopic = () => {\r\n                        if(topic !== \"\") {\r\n                            setIsEmpty(false);\r\n                            props.addTopic(topic);\r\n                        }\r\n                        else {\r\n                            setIsEmpty(true);\r\n                        }\r\n                    };\r\n        \r\n                    return (\r\n                        <div className=\"row p-1\">\r\n                        <div className=\"col-md-1\">\r\n                        <strong>Topics:</strong>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                        <div className=\"form-group form-inline\">\r\n                        <label></label>\r\n                        <input type=\"text\" name=\"topics\" value={ topic } onChange={ handleChange } placeholder=\"Enter topics\" className=\"form-control\"/>\r\n                        <FontAwesomeIcon onClick = { addTopic } icon={faPlusCircle} style = { { color: 'DodgerBlue' } } size='2x' className=\"default pointer\"/>\r\n                        { isEmpty ? \r\n                        <div className=\"alert alert-danger default\">Empty Topic</div> : ''\r\n                        }\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    );\r\n                };\r\n        \r\n                let TopicList = (props) => {\r\n        \r\n                    return (\r\n                        <div className = 'topic-container'>\r\n                        { props.topics.map((item, index) => \r\n                            <div className='topic' key={index}>\r\n                                <span className=\"default\">{item}</span>\r\n                                <FontAwesomeIcon icon={ faTimesCircle } onClick={ () => { props.deleteTopic(index) } } className=\"default\"/>\r\n                            </div>\r\n                        ) }\r\n                        </div>\r\n                    );\r\n                };\r\n        \r\n                return (\r\n                    <div>\r\n                        <Add addTopic = { props.addTopic } />\r\n                        <TopicList topics = { props.topics } deleteTopic = { props.deleteTopic } />\r\n                    </div>\r\n                );\r\n            };\r\n\r\n            let [data, setData] = useState({});\r\n\r\n            useEffect(() => {\r\n                setData(props.data);\r\n            }, [props.data]);\r\n            \r\n            function handleChange(e) {\r\n                setData({ ...data, [e.target.name]: e.target.value });\r\n            }\r\n\r\n            function addTopic(topic) {\r\n                let topics = [...data.topics];\r\n                topics.push(topic);\r\n                setData({ ...data, topics: topics });\r\n            }\r\n        \r\n            function deleteTopic(delIndex) {\r\n                let topics = [];\r\n                data.topics.forEach((topic, index) => {\r\n                    if(index !== delIndex) {\r\n                        topics.push(topic);\r\n                    }\r\n                });\r\n                setData({ ...data, topics: topics });\r\n            }\r\n\r\n            function save() {\r\n                props.notify(Actions.EditInProgress);\r\n                fetch(\"/api/resource/\" + data.id,\r\n                    {   method: \"PUT\",\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'XSRF-TOKEN': getcsrftoken()\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    if(response.status === 200) {\r\n                        props.notify(Actions.EditCompleted);\r\n                    }\r\n                });\r\n            }\r\n\r\n            function deleteResource() {\r\n                console.log('t');\r\n                props.notify(Actions.DeleteInProgress);\r\n                fetch(\"/api/resource/\" + data.id,\r\n                    {   method: \"DELETE\",\r\n                        headers: {\r\n                            'XSRF-TOKEN': getcsrftoken()\r\n                        }\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    if(response.status === 200) {\r\n                        props.notify(Actions.DeleteCompleted);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return (\r\n                <li className=\"resource-container\">\r\n                <div className=\"row p-1\">\r\n                <div className=\"col-md-1\">\r\n                <strong>Title: </strong>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                <input type=\"text\" name='title' value={data.title} onChange = { handleChange } placeholder=\"Enter title\" className=\"form-control\" />\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row p-1\">\r\n                <div className=\"col-md-1\">\r\n                <strong>Link: </strong>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                <input type=\"text\" name='link' value={data.link} onChange = { handleChange } placeholder=\"Enter title\" className=\"form-control\" />\r\n                </div>\r\n                </div>\r\n\r\n                { data.topics ? <Topics topics = { data.topics } addTopic = { addTopic } deleteTopic = { deleteTopic } /> : ''}\r\n\r\n                <div className=\"row p-1\">\r\n                <div className=\"col-md-3 d-flex align-items-center\">\r\n                <button type=\"button\" onClick={ save } className=\"btn btn-success m-1\">Save</button>\r\n                <button type=\"button\" onClick = { () => props.handleEdit('view') } className=\"btn btn-danger m-1\">Cancel</button>\r\n                <FontAwesomeIcon icon={faTrashAlt} onClick={ deleteResource } className=\"default\" size=\"2x\" style={ { color: 'Crimson', cursor: 'pointer' } } />\r\n                \r\n                </div>\r\n                </div>\r\n                    \r\n                </li> \r\n            );\r\n        }\r\n\r\n        return mode === 'view' ? <ResourceView data = { data } handleEdit = { handleEdit } /> :\r\n            <EditResourceView data = { data} handleEdit = { handleEdit } handleChange = { handleChange } notify = { props.notify } />;\r\n    }\r\n\r\n    return (\r\n        <div style = { { position: 'relative', height: '100%'} }>\r\n        { inProgress ? <Loader /> : '' }\r\n        <ul style={ { width: '100%', listStyleType: 'none' } } className=\"resourcelist\">\r\n        { props.resources.map((resource) => (<Resource key = { resource.id } data = { resource } notify = { handleEvents } />)) }\r\n        </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResourceList;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TopMenu from './TopMenu';\r\nimport Add from './Add';\r\nimport ResourceList from './ResourceList';\r\nimport Actions from './Actions';\r\n\r\nfunction Home(props) {\r\n\r\n    let element;\r\n    let [resources, setResources] = useState([]);\r\n    let [addViewState, setAddViewState] = useState(false);\r\n    let [actionInProgress, setActionInProgress] = useState(null);\r\n\r\n    function logout() {\r\n        localStorage.removeItem('loggedIn');\r\n        props.notifyLoginState(false, 0);\r\n    }\r\n\r\n    function receiveAddViewState(state) {\r\n        setAddViewState(state);\r\n    }\r\n\r\n    function receiveNotifications(action) {\r\n        switch(action) {\r\n            case Actions.AddCompleted:\r\n            case Actions.EditCompleted:\r\n            case Actions.DeleteCompleted:\r\n                getResources();\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    let getResources = () => {\r\n        setActionInProgress(Actions.FetchingData);\r\n        fetch('/api/resources',\r\n            { method: 'GET' }\r\n        ).then((response) => {\r\n            if(response.status === 200) \r\n                return response.json();\r\n        }).then((response) => {\r\n            setResources(response);\r\n            setActionInProgress(null);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.loggedIn) {\r\n            getResources();\r\n        }\r\n    }, [props.loggedIn]);\r\n\r\n    if(props.loggedIn === true) {\r\n        element =  \r\n        <div className=\"container-fluid\" style={ { height: '100%' }}> \r\n        <TopMenu logout = { logout } notify = { receiveAddViewState }  addViewState = { addViewState } />\r\n        <Add notify = { receiveNotifications } active = { addViewState } />\r\n        <ResourceList resources = { resources } notify = { receiveNotifications } actionInProgress = { actionInProgress } />\r\n        </div>\r\n        ;\r\n    }\r\n    else {\r\n        element =  <Redirect to=\"/admin/login\" />;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './Login';\n\nimport Home from './Home';\nimport './App.css';\n\nfunction App() {\n  const [session, setSession] = useState(JSON.parse(localStorage.getItem('session')));\n  \n  useEffect(() => {\n    let session = localStorage.getItem('session');\n    let currentTime = new Date();\n    if(session === null || session.expireTime <= currentTime.getTime()) {\n      let data = { loggedIn: false, expireTime: 0 };\n      localStorage.setItem('session', JSON.stringify(data));\n    }\n  }, [session]);\n\n  function receiveLoginEvents(status, expireTime) {\n    let data = { 'loggedIn': status, 'expireTime': expireTime };\n    localStorage.setItem('session', JSON.stringify(data));\n    setSession(data);\n  }\n\n  return (\n    <Router>\n      <div style={ { height: '100%' } }>\n\n      <Switch>\n        <Route path=\"/admin/login\">\n          <Login loggedIn = { session ? session.loggedIn : false } notifyLoginState = { receiveLoginEvents } />\n        </Route>\n        <Route path=\"/admin\">\n          <Home loggedIn = { session ? session.loggedIn : false } notifyLoginState = { receiveLoginEvents } />\n        </Route>\n      </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}